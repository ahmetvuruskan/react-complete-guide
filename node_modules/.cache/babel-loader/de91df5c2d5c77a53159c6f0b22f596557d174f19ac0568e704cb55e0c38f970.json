{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmet\\\\Desktop\\\\reactjs\\\\01-starting-setup\\\\src\\\\components\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./Filter/ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const [filterInfoText, setFilterInfoText] = useState('2019 , 2021 & 2022');\n  const changeFilteredYear = selectedYear => {\n    setFilteredYear(selectedYear);\n    if (selectedYear === '2019') {\n      setFilterInfoText(\"2019 , 2021 & 2022\");\n    } else if (selectedYear === '2020') {\n      setFilterInfoText(\"2020 , 2021 & 2022\");\n    } else if (selectedYear === '2021') {\n      setFilterInfoText(\"2021 , 2020 & 2022\");\n    } else {\n      setFilterInfoText(\"2022 , 2020 & 2021\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilteredyear: changeFilteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"filter-info\",\n      children: [\" Data for years \", filterInfoText, \" is hidden\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expenses-list\",\n      children: props.expenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"TOalGCkOXbnwKF0YstNgKu0EiC4=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterInfoText","setFilterInfoText","changeFilteredYear","selectedYear","className","children","selected","onChangeFilteredyear","fileName","_jsxFileName","lineNumber","columnNumber","expenses","map","expense","title","amount","date","id","_c","$RefreshReg$"],"sources":["C:/Users/Ahmet/Desktop/reactjs/01-starting-setup/src/components/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./Filter/ExpensesFilter\";\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    const [filterInfoText,setFilterInfoText] = useState('2019 , 2021 & 2022');\r\n    const changeFilteredYear = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n       if (selectedYear ==='2019'){\r\n           setFilterInfoText(\"2019 , 2021 & 2022\")\r\n       }else if (selectedYear ==='2020') {\r\n           setFilterInfoText(\"2020 , 2021 & 2022\")\r\n       }else if (selectedYear ==='2021') {\r\n              setFilterInfoText(\"2021 , 2020 & 2022\")\r\n       }else{\r\n              setFilterInfoText(\"2022 , 2020 & 2021\")\r\n       }\r\n    }\r\n  return (\r\n    <div className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilteredyear={changeFilteredYear}/>\r\n        <p className=\"filter-info\"> Data for years {filterInfoText} is hidden</p>\r\n      <div className=\"expenses-list\">\r\n        {props.expenses.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAM,CAACU,cAAc,EAACC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,oBAAoB,CAAC;EACzE,MAAMY,kBAAkB,GAAIC,YAAY,IAAK;IACzCJ,eAAe,CAACI,YAAY,CAAC;IAC9B,IAAIA,YAAY,KAAI,MAAM,EAAC;MACvBF,iBAAiB,CAAC,oBAAoB,CAAC;IAC3C,CAAC,MAAK,IAAIE,YAAY,KAAI,MAAM,EAAE;MAC9BF,iBAAiB,CAAC,oBAAoB,CAAC;IAC3C,CAAC,MAAK,IAAIE,YAAY,KAAI,MAAM,EAAE;MAC3BF,iBAAiB,CAAC,oBAAoB,CAAC;IAC9C,CAAC,MAAI;MACEA,iBAAiB,CAAC,oBAAoB,CAAC;IAC9C;EACH,CAAC;EACH,oBACEP,OAAA;IAAKU,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBX,OAAA,CAACF,cAAc;MAACc,QAAQ,EAAER,YAAa;MAACS,oBAAoB,EAAEL;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACnFjB,OAAA;MAAGU,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAC,kBAAgB,EAACL,cAAc,EAAC,YAAU;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAC3EjB,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BT,KAAK,CAACgB,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBAC1BpB,OAAA,CAACH,WAAW;QAEVwB,KAAK,EAAED,OAAO,CAACC,KAAM;QACrBC,MAAM,EAAEF,OAAO,CAACE,MAAO;QACvBC,IAAI,EAAEH,OAAO,CAACG;MAAK,GAHdH,OAAO,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKlB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACd,EAAA,CA/BQF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}